% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archive.R
\name{epi_archive}
\alias{epi_archive}
\alias{new_epi_archive}
\title{\code{epi_archive} object}
\usage{
epi_archive(...)

new_epi_archive(
  x,
  geo_type = NULL,
  time_type = NULL,
  other_keys = NULL,
  additional_metadata = NULL,
  compactify = NULL,
  clobberable_versions_start = NA,
  versions_end = NULL
)
}
\arguments{
\item{x}{A data.frame, data.table, or tibble, with columns \code{geo_value},
\code{time_value}, \code{version}, and then any additional number of columns.}

\item{geo_type}{Type for the geo values. If missing, then the function will
attempt to infer it from the geo values present; if this fails, then it
will be set to "custom".}

\item{time_type}{Type for the time values. If missing, then the function will
attempt to infer it from the time values present; if this fails, then it
will be set to "custom".}

\item{other_keys}{Character vector specifying the names of variables in \code{x}
that should be considered key variables (in the language of \code{data.table})
apart from "geo_value", "time_value", and "version".}

\item{additional_metadata}{List of additional metadata to attach to the
\code{epi_archive} object. The metadata will have \code{geo_type} and \code{time_type}
fields; named entries from the passed list or will be included as well.}

\item{compactify}{Optional; Boolean or \code{NULL}: should we remove rows that are
considered redundant for the purposes of \code{epi_archive}'s built-in methods
such as \code{as_of}? As these methods use the last version of each observation
carried forward (LOCF) to interpolate between the version data provided,
rows that don't change these LOCF results can potentially be omitted to
save space while maintaining the same behavior (with the help of the
\code{clobberable_versions_start} and \code{versions_end} fields in some edge cases).
\code{TRUE} will remove these rows, \code{FALSE} will not, and missing or \code{NULL} will
remove these rows and issue a warning. Generally, this can be set to
\code{TRUE}, but if you directly inspect or edit the fields of the \code{epi_archive}
such as its \code{DT}, or rely on redundant updates to achieve a certain
behavior of the \code{ref_time_values} default in \code{epix_slide}, you will have to
determine whether \code{compactify=TRUE} will produce the desired results. If
compactification here is removing a large proportion of the rows, this may
indicate a potential for space, time, or bandwidth savings upstream the
data pipeline, e.g., by avoiding fetching, storing, or processing these
rows of \code{x}.}

\item{clobberable_versions_start}{Optional; as in \code{\link{as_epi_archive}}}

\item{versions_end}{Optional; as in \code{\link{as_epi_archive}}}
}
\value{
An \code{epi_archive} object.
}
\description{
An \code{epi_archive} is an R6 class which contains a data table
along with several relevant pieces of metadata. The data table can be seen
as the full archive (version history) for some signal variables of
interest.

Creates a new \code{epi_archive} object.
}
\details{
Epi Archive

An \code{epi_archive} is an R6 class which contains a data table \code{DT}, of
class \code{data.table} from the \code{data.table} package, with (at least) the
following columns:
\itemize{
\item \code{geo_value}: the geographic value associated with each row of measurements.
\item \code{time_value}: the time value associated with each row of measurements.
\item \code{version}: the time value specifying the version for each row of
measurements. For example, if in a given row the \code{version} is January 15,
2022 and \code{time_value} is January 14, 2022, then this row contains the
measurements of the data for January 14, 2022 that were available one day
later.
}

The data table \code{DT} has key variables \code{geo_value}, \code{time_value}, \code{version},
as well as any others (these can be specified when instantiating the
\code{epi_archive} object via the \code{other_keys} argument, and/or set by operating
on \code{DT} directly). Refer to the documentation for \code{\link[=as_epi_archive]{as_epi_archive()}} for
information and examples of relevant parameter names for an \code{epi_archive} object.
Note that there can only be a single row per unique combination of
key variables, and thus the key variables are critical for figuring out how
to generate a snapshot of data from the archive, as of a given version.

In general, the last version of each observation is carried forward (LOCF) to
fill in data between recorded versions, and between the last recorded
update and the \code{versions_end}. One consequence is that the \code{DT}
doesn't have to contain a full snapshot of every version (although this
generally works), but can instead contain only the rows that are new or
changed from the previous version (see \code{compactify}, which does this
automatically). Currently, deletions must be represented as revising a row
to a special state (e.g., making the entries \code{NA} or including a special
column that flags the data as removed and performing some kind of
post-processing), and the archive is unaware of what this state is. Note
that \code{NA}s \emph{can} be introduced by \code{epi_archive} methods for other reasons,
e.g., in \code{\link{epix_fill_through_version}} and \code{\link{epix_merge}}, if requested, to
represent potential update data that we do not yet have access to; or in
\code{\link{epix_merge}} to represent the "value" of an observation before the
version in which it was first released, or if no version of that
observation appears in the archive data at allies

Refer to the documentation for \code{\link[=as_epi_archive]{as_epi_archive()}} for more information
and examples of parameter names.
}
\section{Metadata}{

The following pieces of metadata are included as fields in an \code{epi_archive}
object:
\itemize{
\item \code{geo_type}: the type for the geo values.
\item \code{time_type}: the type for the time values.
\item \code{additional_metadata}: list of additional metadata for the data archive.
}

Unlike an \code{epi_df} object, metadata for an \code{epi_archive} object \code{x} can be
accessed (and altered) directly, as in \code{x$geo_type} or \code{x$time_type},
etc. Like an \code{epi_df} object, the \code{geo_type} and \code{time_type} fields in the
metadata of an \code{epi_archive} object are not currently used by any
downstream functions in the \code{epiprocess} package, and serve only as useful
bits of information to convey about the data set at hand.
}

\section{Generating Snapshots}{

An \code{epi_archive} object can be used to generate a snapshot of the data in
\code{epi_df} format, which represents the most up-to-date values of the signal
variables, as of the specified version. This is accomplished by calling the
\code{as_of()} method for an \code{epi_archive} object \code{x}. More details on this
method are documented in the wrapper function \code{\link[=epix_as_of]{epix_as_of()}}.
}

\section{Sliding Computations}{

We can run a sliding computation over an \code{epi_archive} object, much like
\code{epi_slide()} does for an \code{epi_df} object. This is accomplished by calling
the \code{slide()} method for an \code{epi_archive} object, which works similarly to
the way \code{epi_slide()} works for an \code{epi_df} object, but with one key
difference: it is version-aware. That is, for an \code{epi_archive} object, the
sliding computation at any given reference time point t is performed on
\strong{data that would have been available as of t}. More details on \code{slide()}
are documented in the wrapper function \code{\link[=epix_slide]{epix_slide()}}.
}

\examples{
tib <- tibble::tibble(
  geo_value = rep(c("ca", "hi"), each = 5),
  time_value = rep(seq(as.Date("2020-01-01"),
    by = 1, length.out = 5
  ), times = 2),
  version = rep(seq(as.Date("2020-01-02"),
    by = 1, length.out = 5
  ), times = 2),
  value = rnorm(10, mean = 2, sd = 1)
)

toy_epi_archive <- tib \%>\% new_epi_archive(
  geo_type = "state",
  time_type = "day"
)
toy_epi_archive
}
